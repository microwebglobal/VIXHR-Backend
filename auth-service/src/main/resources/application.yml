server:
  port: 8081
  max-http-request-header-size: 10KB
  servlet:
    session:
      timeout: 30m

spring:
  application:
    name: auth-service
  datasource:
    url: jdbc:postgresql://localhost:5432/vixhr_auth
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  session:
    jdbc:
      initialize-schema: always
  security:
    oauth2:
      authorizationserver:
        client:
          react-client:
            registration:
              client-id: "react-client"
              client-authentication-methods:
                - "none"
              authorization-grant-types:
                - "authorization_code"
                - "refresh_token"
              redirect-uris:
                - "http://localhost:3000/auth/callback"
              post-logout-redirect-uris:
                - "http://localhost:3000"
              scopes:
                - "openid"
                - "profile"
            require-authorization-consent: false
            require-proof-key: true
          test-client:
            registration:
              client-id: "test-client"
              client-secret: "$2a$10$YWxUGpIPGOz/9E5yVaB.pu/lMqqWgKHPMGhSXyAcwnvsqfxeyC0RC"
              client-authentication-methods:
                - "client_secret_basic"
              authorization-grant-types:
                - "client_credentials"
              scopes:
                - "openid"
                - "profile"

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    hostname: localhost
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    lease-renewal-interval-in-seconds: 30

springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true
    oauth:
      client-id: test-client
      client-secret: secret
  oAuthFlow:
    tokenUrl: http://localhost:8081/oauth2/token